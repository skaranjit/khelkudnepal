<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= news.title %> | Khelkud Nepal</title>
  <link rel="stylesheet" href="/css/styles.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css">
</head>
<body>
  <%- include('../partials/header') %>

<div class="container mt-4">
  <div class="row">
    <div class="col-lg-8">
      <div class="article-detail card shadow-sm">
        <div class="card-body">
          <h1 class="article-title mb-3"><%= news.title %></h1>
          
          <div class="article-meta d-flex flex-wrap gap-3 mb-3">
            <span class="meta-item"><i class="bi bi-clock"></i> <%= new Date(news.publishedAt).toLocaleString() %></span>
            <% if (news.source) { %>
              <span class="meta-item"><i class="bi bi-newspaper"></i> <%= news.source %></span>
            <% } %>
            <% if (news.author) { %>
              <span class="meta-item"><i class="bi bi-person"></i> <%= news.author %></span>
            <% } %>
            <% if (news.location) { %>
              <span class="meta-item"><i class="bi bi-geo-alt"></i> <%= news.location %></span>
            <% } %>
          </div>

          <% if (news.tags && news.tags.length > 0) { %>
            <div class="article-tags mb-3">
              <% news.tags.forEach(function(tag) { %>
                <span class="badge bg-primary me-1"><%= tag %></span>
              <% }); %>
            </div>
          <% } %>

          <% if (news.summary) { %>
            <div class="article-featured-summary p-3 mb-4 bg-light border-start border-5 border-primary rounded">
              <% 
                // Split summary into sentences properly
                const sentences = news.summary.match(/[^\.!\?]+[\.!\?]+/g) || [news.summary];
                const firstSentence = sentences[0] || '';
                const restSentences = sentences.slice(1).join(' ') || '';
              %>
              <p class="lead-summary fw-bold mb-2"><%= firstSentence %></p>
              <% if (restSentences) { %>
                <p class="supporting-summary mb-0"><%= restSentences %></p>
              <% } %>
            </div>
          <% } %>

          <% if (news.image) { %>
            <div class="article-img-wrap mb-4">
              <img src="<%= news.image %>" alt="<%= news.title %>" class="img-fluid article-img rounded">
              <% if (news.imageCaption) { %>
                <p class="image-caption text-center mt-2 text-muted fst-italic"><%= news.imageCaption %></p>
              <% } %>
            </div>
          <% } %>

          <div class="article-content">
            <%- news.content %>
          </div>
          
          <% if (news.url) { %>
            <div class="mt-4">
              <a href="<%= news.url %>" target="_blank" class="btn btn-outline-primary">
                <i class="bi bi-link-45deg"></i> Read Original Article
              </a>
            </div>
          <% } %>
        </div>
      </div>
      
      <div class="comments-section mt-5">
        <h3 class="section-title">Comments</h3>
        <div class="card">
          <div class="card-body">
            <% if (locals.user) { %>
              <form id="comment-form" class="mb-4">
                <div class="mb-3">
                  <textarea class="form-control" id="comment-content" rows="3" placeholder="Write your comment here..."></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Post Comment</button>
              </form>
              <hr>
              <div id="comments-container">
                <div class="text-center py-3">
                  <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading comments...</span>
                  </div>
                </div>
              </div>
            <% } else { %>
              <p class="text-center">
                <a href="/login" class="btn btn-outline-primary">Login</a> or 
                <a href="/register" class="btn btn-outline-secondary">Register</a> 
                to post comments
              </p>
              <hr>
              <div id="comments-container">
                <div class="text-center py-3">
                  <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading comments...</span>
                  </div>
                </div>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-lg-4">
      <div class="card mb-4">
        <div class="card-header bg-primary text-white">
          <h5 class="card-title mb-0">Related News</h5>
        </div>
        <div class="card-body">
          <div id="related-news-container">
            <div class="text-center">
              <div class="spinner-border spinner-border-sm text-primary" role="status"></div>
              <p class="mt-2 small">Loading related articles...</p>
            </div>
          </div>
        </div>
      </div>
      
      <div class="card">
        <div class="card-header bg-secondary text-white">
          <h5 class="card-title mb-0">Latest in <%= news.category || 'Sports' %></h5>
        </div>
        <div class="card-body">
          <div id="category-news-container">
            <div class="text-center">
              <div class="spinner-border spinner-border-sm text-primary" role="status"></div>
              <p class="mt-2 small">Loading latest articles...</p>
            </div>
          </div>
        </div>
      </div>
      
      <div class="sidebar-section">
        <h4 class="sidebar-title">Popular Categories</h4>
        <div class="list-group list-group-flush">
          <a href="/category/football" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
            Football
            <span class="badge bg-primary rounded-pill">14</span>
          </a>
          <a href="/category/cricket" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
            Cricket
            <span class="badge bg-primary rounded-pill">12</span>
          </a>
          <a href="/category/basketball" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
            Basketball
            <span class="badge bg-primary rounded-pill">8</span>
          </a>
          <a href="/category/athletics" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
            Athletics
            <span class="badge bg-primary rounded-pill">6</span>
          </a>
          <a href="/category/tennis" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
            Tennis
            <span class="badge bg-primary rounded-pill">5</span>
          </a>
        </div>
      </div>
      
      <div class="sidebar-section">
        <h4 class="sidebar-title">Newsletter</h4>
        <p>Subscribe to our newsletter to receive the latest updates.</p>
        <form id="sidebar-subscription-form">
          <div class="mb-3">
            <input type="email" class="form-control" placeholder="Your email address" required>
          </div>
          <button type="submit" class="btn btn-primary w-100">Subscribe</button>
        </form>
      </div>
    </div>
  </div>
</div>

<style>
  .article-image {
    max-height: 500px;
    object-fit: cover;
  }
  
  .image-gallery .thumbnail {
    height: 100px;
    object-fit: cover;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .image-gallery .thumbnail:hover {
    opacity: 0.8;
    transform: scale(1.05);
  }
  
  /* Styles for related content summaries */
  .related-summary {
    font-size: 0.85rem;
    line-height: 1.4;
  }
  
  .related-summary p {
    margin-bottom: 0.5rem;
  }
  
  .toggle-summary {
    font-size: 0.8rem;
    text-decoration: none;
    padding: 0;
    margin: 0;
  }
  
  .toggle-summary:hover {
    text-decoration: underline;
  }
  
  #related-news-container .card-header {
    padding: 0.75rem 1rem;
  }
  
  #related-news-container .mb-4:last-child {
    margin-bottom: 0 !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const newsId = '<%= news._id %>';
    
    // ------ RELATED NEWS LOADING ------
    const relatedContainer = document.getElementById('related-news-container');
    const categoryContainer = document.getElementById('category-news-container');
    
    // Simple function to display loading error
    function showError(container, message) {
      container.innerHTML = `<p class="text-center text-danger">${message}</p>`;
    }
    
    // Simple function to display "no results" message
    function showNoResults(container, message) {
      container.innerHTML = `<p class="text-center">${message}</p>`;
    }
    
    // RELATED NEWS - Simple direct implementation
    fetch(`/api/news/related/${newsId}`)
      .then(response => {
        if (!response.ok) throw new Error('Network response was not ok');
        return response.json();
      })
      .then(data => {
        console.log('Related news response:', data);
        
        if (!data || !data.success || !data.data || data.data.length === 0) {
          showNoResults(relatedContainer, 'No related news found.');
          return;
        }
        
        relatedContainer.innerHTML = '';
        
        // Simple rendering of related news items
        data.data.forEach(item => {
          if (!item) return; // Skip null items
          
          const imageUrl = item.imageUrl || item.image || '/images/placeholder.jpg';
          
          relatedContainer.innerHTML += `
            <div class="mb-3">
              <div class="row g-0">
                <div class="col-4">
                  <img src="${imageUrl}" class="img-fluid rounded" 
                       alt="${item.title || 'News article'}"
                       onerror="this.onerror=null; this.src='/images/placeholder.jpg';">
                </div>
                <div class="col-8 ps-2">
                  <h6 class="mb-1" style="font-size: 0.9rem;">${item.title || 'News article'}</h6>
                  <small class="text-muted d-block mb-1">
                    ${item.category || ''} ${item.publishedAt ? '• ' + new Date(item.publishedAt).toLocaleDateString() : ''}
                  </small>
                  <a href="/news/${item._id}" class="btn btn-sm btn-primary">Read Article</a>
                </div>
              </div>
            </div>
          `;
        });
      })
      .catch(error => {
        console.error('Error loading related news:', error);
        showError(relatedContainer, 'Error loading related news. Please try refreshing the page.');
      });
    
    // CATEGORY NEWS - Simple direct implementation
    fetch(`/api/news/category/<%= news.category %>?limit=5`)
      .then(response => {
        if (!response.ok) throw new Error('Network response was not ok');
        return response.json();
      })
      .then(data => {
        console.log('Category news response:', data);
        
        if (!data || !data.success || !data.data || data.data.length === 0) {
          showNoResults(categoryContainer, 'No category news found.');
          return;
        }
        
        categoryContainer.innerHTML = '';
        
        // Simple rendering of category news items
        data.data.forEach(item => {
          // Skip the current article
          if (item._id === '<%= news._id %>') return;
          if (!item) return; // Skip null items
          
          const imageUrl = item.imageUrl || item.image || '/images/placeholder.jpg';
          
          categoryContainer.innerHTML += `
            <div class="mb-3">
              <div class="row g-0">
                <div class="col-4">
                  <img src="${imageUrl}" class="img-fluid rounded" 
                       alt="${item.title || 'News article'}"
                       onerror="this.onerror=null; this.src='/images/placeholder.jpg';">
                </div>
                <div class="col-8 ps-2">
                  <h6 class="mb-1" style="font-size: 0.9rem;">${item.title || 'News article'}</h6>
                  <small class="text-muted d-block mb-1">
                    ${new Date(item.publishedAt).toLocaleDateString() || ''}
                  </small>
                  <a href="/news/${item._id}" class="btn btn-sm btn-primary">Read More</a>
                </div>
              </div>
            </div>
          `;
        });
      })
      .catch(error => {
        console.error('Error loading category news:', error);
        showError(categoryContainer, 'Error loading category news. Please try refreshing the page.');
      });
    
    // Load comments for this news article
    loadComments(newsId);
    
    // Handle comment form submission if user is logged in
    const commentForm = document.getElementById('comment-form');
    if (commentForm) {
      commentForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const content = document.getElementById('comment-content').value.trim();
        const submitBtn = this.querySelector('button[type="submit"]');
        
        if (!content) {
          alert('Please enter a comment');
          return;
        }
        
        // Disable button and show loading
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Posting...';
        
        // Simple post request
        fetch(`/api/comments/news/${newsId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ content })
        })
        .then(response => {
          if (!response.ok) {
            if (response.status === 401) {
              throw new Error('unauthorized');
            }
            throw new Error('server-error');
          }
          return response.json();
        })
        .then(data => {
          // Clear form
          document.getElementById('comment-content').value = '';
          
          // Reload comments
          loadComments(newsId);
          
          // Reset button
          submitBtn.disabled = false;
          submitBtn.innerHTML = 'Post Comment';
        })
        .catch(error => {
          console.error('Error posting comment:', error);
          
          // Handle different errors
          if (error.message === 'unauthorized') {
            alert('You must be logged in to post comments');
            window.location.href = '/login';
          } else {
            alert('Error posting your comment. Please try again.');
          }
          
          // Reset button
          submitBtn.disabled = false;
          submitBtn.innerHTML = 'Post Comment';
        });
      });
    }
  });
  
  // Function to load comments - extremely simplified
  function loadComments(newsId) {
    const commentsContainer = document.getElementById('comments-container');
    
    // Hard-coded timeout for when fetch doesn't resolve
    const loadingTimeout = setTimeout(() => {
      commentsContainer.innerHTML = '<p class="text-center text-muted">No comments available.</p>';
    }, 5000);
    
    fetch(`/api/comments/news/${newsId}`, {
      method: 'GET',
      headers: {
        'Accept': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      clearTimeout(loadingTimeout);
      
      if (!data || !data.data || data.data.length === 0) {
        commentsContainer.innerHTML = '<p class="text-center text-muted">No comments yet. Be the first to comment!</p>';
        return;
      }
      
      commentsContainer.innerHTML = '';
      
      data.data.forEach(comment => {
        if (!comment) return;
        
        const username = comment.user ? (comment.user.name || comment.user.username || 'Anonymous') : 'Anonymous';
        const date = new Date(comment.createdAt).toLocaleDateString();
        
        commentsContainer.innerHTML += `
          <div class="comment mb-3 p-3 border rounded">
            <div class="d-flex justify-content-between mb-2">
              <strong>${username}</strong>
              <small class="text-muted">${date}</small>
            </div>
            <p class="mb-0">${comment.content || ''}</p>
            ${comment.user && comment.user._id === '<%= locals.user && locals.user.id %>' ? 
              `<div class="mt-2 text-end">
                <button class="btn btn-sm btn-outline-danger delete-comment" data-id="${comment._id}">Delete</button>
              </div>` : ''}
          </div>
        `;
      });
      
      // Set up event listeners for delete buttons
      document.querySelectorAll('.delete-comment').forEach(btn => {
        btn.addEventListener('click', function() {
          if (confirm('Delete this comment?')) {
            const commentId = this.dataset.id;
            
            fetch(`/api/comments/${commentId}`, { 
              method: 'DELETE'
            })
            .then(() => loadComments(newsId))
            .catch(err => console.error('Error deleting comment:', err));
          }
        });
      });
    })
    .catch(error => {
      clearTimeout(loadingTimeout);
      console.error('Error loading comments:', error);
      commentsContainer.innerHTML = '<p class="text-center text-muted">Error loading comments. Please try again later.</p>';
    });
  }
</script>

  <%- include('../partials/footer') %>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/main.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
  <script>
    // Smooth scrolling for table of contents
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });

    // Share functionality
    document.querySelector('.share-btn').addEventListener('click', function() {
      const url = this.dataset.shareUrl;
      const title = this.dataset.shareTitle;
      
      if (navigator.share) {
        navigator.share({
          title: title,
          url: url
        }).catch(console.error);
      } else {
        // Fallback for browsers that don't support Web Share API
        const shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`;
        window.open(shareUrl, '_blank', 'width=600,height=400');
      }
    });
  </script>
</body>
</html> 